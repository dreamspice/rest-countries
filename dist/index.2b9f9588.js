const t=document.querySelector(".form"),n=document.querySelector(".form__input"),e=document.querySelector(".countries"),a=document.querySelector(".input-elements"),o=document.querySelector(".select"),s=document.querySelector(".nav__mode"),c={data:{},currentCountry:{},filterCountries:{}};window.addEventListener("load",(function(){r()})),t.addEventListener("submit",(function(t){t.preventDefault(),n.value?i(n.value):(e.textContent="",r())}));const r=async function(){try{const t=await fetch("https://restcountries.com/v3.1/all"),n=await t.json();c.data=n.map((t=>({name:t.name.common,population:t.population,region:t.region,capital:t.capital,img:t.flags.svg,subregion:t.subregion,domain:t.tld}))),c.data.sort((function(t,n){let e=t.name.toUpperCase(),a=n.name.toUpperCase();return e===a?0:e>a?1:-1})),c.data.forEach(((t,n)=>{const a=`\n  <div class="countries__country">\n  <div class="countries__country-flag">\n    <img\n      class="countries__country-flag--img"\n      src="${c.data[n].img}"\n    />\n  </div>\n  <div class="countries__details">\n    <p class="countries__details--name">${c.data[n].name}</p>\n    <p class="countries__details--population">Population: ${c.data[n].population}</p>\n    <p class="countries__details--region">Region: ${c.data[n].region}</p>\n    <p class="countries__details--capital">Capital: ${c.data[n].capital}</p>\n  </div>\n</div>\n  `;e.insertAdjacentHTML("beforeend",a)}))}catch(t){console.error(t.message)}},i=async function(t){try{const n=await fetch(`https://restcountries.com/v3.1/name/${t}`),[a]=await n.json();console.log(a),c.currentCountry={flag:a.flags.svg,name:a.name.common,population:a.population,region:a.region};const o=`\n  <div class="countries__country">\n  <div class="countries__country-flag">\n    <img\n      class="countries__country-flag--img"\n      src="${a.flags.svg}"\n    />\n  </div>\n  <div class="countries__details">\n    <p class="countries__details--name">${a.name.common}</p>\n    <p class="countries__details--population">Population: ${a.population}</p>\n    <p class="countries__details--region">Region: ${a.region}</p>\n    <p class="countries__details--capital">Capital: ${a.capital}</p>\n  </div>\n</div>\n  `;e.textContent="",e.insertAdjacentHTML("beforeend",o)}catch(t){console.error(t.message)}};e.addEventListener("click",(async function(t){try{const o=t.target.closest(".countries__country");if(!o)return;let s=o.childNodes[3].firstElementChild.textContent;const i=await fetch(`https://restcountries.com/v3.1/name/${s}`),[l]=await i.json();c.currentCountry={flag:l.flags.svg,name:l.name.common,population:l.population,region:l.region,subregion:l.subregion,capital:l.capital,domain:l.tld,borders:l.borders},e.textContent="";const u=`<div class="country">\n  <button class="country__button"><span>&larr;</span>Back</button>\n  <div class="country-flag">\n    <img class="country-flag--img" src="${c.currentCountry.flag}" />\n  </div>\n  <div class="country__details">\n  \n    <p class="country__details--name">${c.currentCountry.name}</p>\n    <p class="country__details--native-name">Native Name:<span class="country__details--data">${c.currentCountry.name}</span></p>\n    <p class="country__details--population">Population:<span class="country__details--data">${c.currentCountry.population}</span></p>\n    <p class="country__details--region">Region:<span class="country__details--data">${c.currentCountry.region}</span></p>\n    <p class="country__details--subregion">Sub Region:<span class="country__details--data">${c.currentCountry.subregion}</span></p>\n    <p class="country__details--capital">Capital:<span class="country__details--data">${c.currentCountry.capital}</span></p>\n\n    <p class="country__details--domain">Top Level Domain:<span class="country__details--data">${c.currentCountry.domain}</span></p>\n\n    <p class="country__details--borders">Border Countries:<span class="country__details--data">${c.currentCountry.borders?c.currentCountry.borders.join(", "):"None"}</span></p>\n  </div>\n</div>`;a.style.opacity="0",e.insertAdjacentHTML("afterbegin",u);document.querySelector(".country__button").addEventListener("click",(function(){a.style.opacity="1",e.textContent="",n.value="",r()}))}catch(t){console.error(t.message)}})),o.addEventListener("change",(function(t){e.textContent="";const n=t.target.value;n||r();const a=c.data.filter((t=>t.region===n));a.forEach(((t,n)=>{const o=`\n<div class="countries__country">\n<div class="countries__country-flag">\n  <img\n    class="countries__country-flag--img"\n    src="${a[n].img}"\n  />\n</div>\n<div class="countries__details">\n  <p class="countries__details--name">${a[n].name}</p>\n  <p class="countries__details--population">Population: ${a[n].population}</p>\n  <p class="countries__details--region">Region: ${a[n].region}</p>\n  <p class="countries__details--capital">Capital: ${a[n].capital}</p>\n</div>\n</div>\n`;e.insertAdjacentHTML("beforeend",o)}))}));let l=localStorage.getItem("data-theme");document.documentElement.setAttribute("data-theme",l),s.textContent="dark"===l?"‚òÄÔ∏è Light mode":"üåö Dark mode";s.addEventListener("click",(()=>{let t=localStorage.getItem("data-theme");console.log(t),"dark"===t?(document.documentElement.setAttribute("data-theme","light"),localStorage.setItem("data-theme","light"),s.textContent="üåö Dark mode"):(document.documentElement.setAttribute("data-theme","dark"),localStorage.setItem("data-theme","dark"),s.textContent="‚òÄÔ∏è Light mode")}));
//# sourceMappingURL=index.2b9f9588.js.map
